[%
  script_arr = [
#     'https://d3js.org/d3-fetch.v1.min.js',
#     'https://cdnjs.cloudflare.com/ajax/libs/crossfilter2/1.5.2/crossfilter.min.js',
#     'https://cdnjs.cloudflare.com/ajax/libs/cytoscape/3.14.1/cytoscape.min.js',
    'kb-cytoscape.umd.js',
  ];

  style_arr = [
      "https://cdn.datatables.net/v/bs-3.3.7/jq-3.3.1/jszip-2.5.0/dt-1.10.21/b-1.6.2/b-colvis-1.6.2/b-html5-1.6.2/b-print-1.6.2/cr-1.5.2/fh-3.1.7/sc-2.0.2/sp-1.1.0/sl-1.3.1/datatables.min.css"
  ];
#   include_datatables = 1;
  page_title = 'Cytoscape Demo';

  BLOCK inline_style %]

.radio-toggle input[type="radio"] {
  opacity: 0;
  position: fixed;
  width: 0;
}

.radio-toggle label {
  border-style: solid;
  border-width: 2px;
}

.radio-toggle input[type="radio"]:focus + label {
  border-style: dashed;
}

.radio-toggle input[type="radio"]:checked + label {
  border-style: dashed;
}
[%
# .radio-toggle label {
#   border-style: 2px solid #444;
#   border-radius: 4px;
# }
#
# .radio-toggle label:hover {
#   background-color: #dfd;
# }
#
# .radio-toggle input[type="radio"]:focus + label {
#   border: 2px dashed #444;
# }
#
# .radio-toggle input[type="radio"]:checked + label {
#   background-color: #bfb;
#   border-color: #4c4;
# }
%]
.nav-link .badge {
  margin-left: 7px;
}

[%
  END;

  inline_style_statements = PROCESS inline_style;
#   include_datatables = 1;

  PROCESS 'views/inc/macros.tt';
  PROCESS 'views/inc/js.tt';
  WRAPPER 'views/inc/page_wrapper.tt';

    cytoscape_content = PROCESS cytoscape;
    dataset_content = PROCESS dataset_picker;

    page_content = [
        {
          name              => 'Dataset Picker',
          name_lc           => 'dataset_tab',
          rendered_content  => dataset_content,
        },
        {
          name              => 'Node Metadata <span class="badge" id="node_count"></span>',
          name_lc           => 'node_metadata_tab',
          content           => 'table',
          table_config => {
            id                => 'node_table',
            for_datatables_js => 1,
          },
        },
        {
          name              => 'Edge Metadata <span class="badge" id="edge_count"></span>',
          name_lc           => 'edge_metadata_tab',
          content           => 'table',
          table_config => {
            id              => 'edge_table',
            for_datatables_js => 1,
          },
        },
        {
          name              => 'Collected Nodes <span class="badge" id="collection_count"></span>',
          name_lc           => 'collection_tab',
          content           => 'table',
          table_config => {
            id              => 'collection_table',
            for_datatables_js => 1,
          },
        },
        {
          name              => "Cytoscape",
          name_lc           => "graph",
          rendered_content  => cytoscape_content,
        },
    ];

    tabbed_layout;

    BLOCK dataset_picker %]
    <div class="container-fluid">
      <div class="row">
        <div class="form-group" id="dataset--div">
        <p>Query run: [% query_params.query %]</p>
        <p>Query params:<p>
        <pre>
[%      USE Dumper;
        Dumper.dump(query_params.params); %]
        </pre>
        <p>Results summary:</p>
        <p>Nodes found: [% results.nodes.size %]</p>
        <p>Edges found: [% results.edges.size %]</p>
        <p>Results as JSON: <a href="dataset.json">Results as JSON</a></p>
        <p>Click the button to load the results:</p>
          <div class="form-group">
            <button id="dataset--button" class="btn dataset--button">
              Load results
            </button>
          </div>
        </div>
      </div>
    </div>
[%
    END;

    BLOCK cytoscape %]
    <div class="container-fluid">
      <div class="row" id="cy">
        <div id="cy--graph" style="height: 1000px" class="col-md-10"></div>
        <div id="cy--controls" class="col-md-2">
          <div class="form-group" id="layout_fit--div">
            <button id="render_chart--button" class="btn render_chart--button"
              data-action="renderData"
              data-target="cy">
              Render chart!
            </button>
            <button id="render_chart--button" class="btn render_chart--button"
              data-action="renderCollection"
              data-target="cy">
              Render collection!
            </button>
          </div>
          <h2>Layout</h2>
          <div class="form-group" id="layout--div">
            <select id="layout--select" class="form-control layout--select" name="layout"
              data-action="setLayout"
              data-target="cy">
            </select>
          </div>
          <div class="form-group" id="layout_fit--div">
            <button id="layout_fit--button" class="btn layout_fit--button col-md-6"
              data-action="fit"
              data-target="cy">
              Fit to viewport
            </button>
            <button id="layout_reset--button" class="btn layout_reset--button col-md-6"
              data-action="reset"
              data-target="cy">
              Reset layout
            </button>
          </div>
          <h2>Selection <span class="badge" id="selection_count"></span></h2>
          <div class="form-group">
            <button id="select_all--button" class="btn"
              data-action="selectAllNodes"
              data-target="cy">
              Select All
            </button>
            <button id="deselect_all--button" class="btn"
              data-action="deselectAllNodes"
              data-target="cy">
              Select None
            </button>
            <button id="select_invert--button" class="btn"
              data-action="invertNodeSelection"
              data-target="cy">
              Invert selection
            </button>
            <button id="select_neighbourhood--button" class="btn"
              data-action="getNeighbourhood"
              data-target="cy">
              Get neighbourhood of selected nodes
            </button>
          </div>
          <div class="form-group">
          [%
            default_vals = [ { label => 'Off', value => 0 }, { label => 'On', value => 1, checked => 1 } ];
            cntrl_list = [
              { name => 'boxSelectionEnabled',  title => 'Box selection', values => default_vals, },
              {
                name => 'selectionType',        title => 'Multiple selection',
                values => [
                  { label => 'Off', value => 'single' },
                  { label => 'On', value => 'additive', checked => 1 }
                ],
              },
              { name => 'userPanningEnabled',   title => 'Panning', values => default_vals, },
              { name => 'userZoomingEnabled',   title => 'Zooming', values => default_vals, },
            ];

            FOR cntrl IN cntrl_list %]
            <div class="btn-group radio-toggle">
              <p class="radio-toggle--title">[% cntrl.title %]</p>
              [% FOR item IN cntrl.values %]
              <label class="btn btn-primary radio-toggle--label" for="[% cntrl.name %]--[% item.value %]"><input type="radio" class="radio-toggle--input" name="[% cntrl.name %]" value="[% item.value %]" id="[% cntrl.name %]--[% item.value %]" [% IF item.checked %]checked[% END %] />

              [% item.label %]
              </label>
              [% END %]
            </div>
          [% END %]
          </div>
          <h2>Node Bag</h2>
          <div class="form-group">
            <button id="collection_add--button" class="btn" type="button"
              data-action="collectSelectedGraphNodes"
              data-target="cy">
              Add selected nodes
            </button>
            <button id="collection_remove--button" class="btn" type="button"
              data-action="discardSelectedGraphNodes"
              data-target="cy">
              Remove selected nodes
            </button>
          </div>
          <!-- h2>Export</h2>
          <div class="form-group">
            <button id="export_json--button" class="btn">
              Export graph as JSON
            </button>
          </div -->
        </div>
      </div>
    </div>
    <!-- Modal
    <div class="modal fade" id="collectionModal" tabindex="-1" role="dialog" aria-labelledby="collectionModalLabel">
      <div class="modal-dialog" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h3 class="modal-title" id="collectionModalLabel">Collected Nodes</h3>
          </div>
          <div class="modal-body">
            <table id="table_collection" class="dataTable__table table table-striped table-bordered"></table>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
          </div>
        </div>
      </div>
    </div> -->
[%
    END;

    WRAPPER js_wrapper;

    USE JSON;
%]
    const datasetConfig = [% template_data.json %]
    initKbCytoscape()
[%
    END; # end js_wrapper
  END; # end page wrapper

%]
